{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/records/{recordID}/analyze": {
            "post": {
                "description": "Fetches the data_url for the record, sends it to the ML service, and returns the result.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "records"
                ],
                "summary": "Analyze a record",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Record ID",
                        "name": "recordID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/client.AnalysisResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/{userID}/records": {
            "get": {
                "description": "Returns a list of all diary records for a specific user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "records"
                ],
                "summary": "Get user records",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/repository.Record"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "client.AnalysisResult": {
            "type": "object",
            "properties": {
                "emotion": {
                    "type": "string"
                },
                "themes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tone": {
                    "type": "string"
                }
            }
        },
        "repository.Record": {
            "type": "object",
            "properties": {
                "data_url": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "mood": {
                    "type": "string"
                },
                "record_date": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        }
    }
}